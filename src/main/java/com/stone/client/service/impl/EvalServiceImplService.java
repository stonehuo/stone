
package com.kpap.client.service.impl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.kpap.client.service.IEvalService;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "EvalServiceImplService", targetNamespace = "http://impl.ws.service.eval.ipph.cn/", wsdlLocation = "http://e.cnipr.com/services/ws?wsdl")
public class EvalServiceImplService
    extends Service
{

    private final static URL EVALSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException EVALSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName EVALSERVICEIMPLSERVICE_QNAME = new QName("http://impl.ws.service.eval.ipph.cn/", "EvalServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://e.cnipr.com/services/ws?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EVALSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        EVALSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public EvalServiceImplService() {
        super(__getWsdlLocation(), EVALSERVICEIMPLSERVICE_QNAME);
    }


    public EvalServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }


    /**
     * 
     * @return
     *     returns IEvalService
     */
    @WebEndpoint(name = "EvalServiceImplPort")
    public IEvalService getEvalServiceImplPort() {
        return super.getPort(new QName("http://impl.ws.service.eval.ipph.cn/", "EvalServiceImplPort"), IEvalService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IEvalService
     */
    @WebEndpoint(name = "EvalServiceImplPort")
    public IEvalService getEvalServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.ws.service.eval.ipph.cn/", "EvalServiceImplPort"), IEvalService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (EVALSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw EVALSERVICEIMPLSERVICE_EXCEPTION;
        }
        return EVALSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
